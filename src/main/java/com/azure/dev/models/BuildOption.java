// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * Represents the application of an optional behavior to a build definition.
 */
@Fluent
public final class BuildOption {
    /*
     * A reference to the build option.
     */
    @JsonProperty(value = "definition")
    private BuildOptionDefinitionReference definition;

    /*
     * Indicates whether the behavior is enabled.
     */
    @JsonProperty(value = "enabled")
    private Boolean enabled;

    /*
     * Dictionary of <string>
     */
    @JsonProperty(value = "inputs")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> inputs;

    /**
     * Creates an instance of BuildOption class.
     */
    public BuildOption() {
    }

    /**
     * Get the definition property: A reference to the build option.
     * 
     * @return the definition value.
     */
    public BuildOptionDefinitionReference definition() {
        return this.definition;
    }

    /**
     * Set the definition property: A reference to the build option.
     * 
     * @param definition the definition value to set.
     * @return the BuildOption object itself.
     */
    public BuildOption withDefinition(BuildOptionDefinitionReference definition) {
        this.definition = definition;
        return this;
    }

    /**
     * Get the enabled property: Indicates whether the behavior is enabled.
     * 
     * @return the enabled value.
     */
    public Boolean enabled() {
        return this.enabled;
    }

    /**
     * Set the enabled property: Indicates whether the behavior is enabled.
     * 
     * @param enabled the enabled value to set.
     * @return the BuildOption object itself.
     */
    public BuildOption withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    /**
     * Get the inputs property: Dictionary of &lt;string&gt;.
     * 
     * @return the inputs value.
     */
    public Map<String, String> inputs() {
        return this.inputs;
    }

    /**
     * Set the inputs property: Dictionary of &lt;string&gt;.
     * 
     * @param inputs the inputs value to set.
     * @return the BuildOption object itself.
     */
    public BuildOption withInputs(Map<String, String> inputs) {
        this.inputs = inputs;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (definition() != null) {
            definition().validate();
        }
    }
}
