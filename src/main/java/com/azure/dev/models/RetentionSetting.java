// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Contains the minimum, maximum, and current value for a retention setting.
 */
@Fluent
public final class RetentionSetting {
    /*
     * The max property.
     */
    @JsonProperty(value = "max")
    private Integer max;

    /*
     * The min property.
     */
    @JsonProperty(value = "min")
    private Integer min;

    /*
     * The value property.
     */
    @JsonProperty(value = "value")
    private Integer value;

    /**
     * Creates an instance of RetentionSetting class.
     */
    public RetentionSetting() {
    }

    /**
     * Get the max property: The max property.
     * 
     * @return the max value.
     */
    public Integer max() {
        return this.max;
    }

    /**
     * Set the max property: The max property.
     * 
     * @param max the max value to set.
     * @return the RetentionSetting object itself.
     */
    public RetentionSetting withMax(Integer max) {
        this.max = max;
        return this;
    }

    /**
     * Get the min property: The min property.
     * 
     * @return the min value.
     */
    public Integer min() {
        return this.min;
    }

    /**
     * Set the min property: The min property.
     * 
     * @param min the min value to set.
     * @return the RetentionSetting object itself.
     */
    public RetentionSetting withMin(Integer min) {
        this.min = min;
        return this;
    }

    /**
     * Get the value property: The value property.
     * 
     * @return the value value.
     */
    public Integer value() {
        return this.value;
    }

    /**
     * Set the value property: The value property.
     * 
     * @param value the value value to set.
     * @return the RetentionSetting object itself.
     */
    public RetentionSetting withValue(Integer value) {
        this.value = value;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
