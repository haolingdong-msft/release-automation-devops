// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for TestOutcome.
 */
public enum TestOutcome {
    /**
     * Enum value unspecified.
     */
    UNSPECIFIED("unspecified"),

    /**
     * Enum value none.
     */
    NONE("none"),

    /**
     * Enum value passed.
     */
    PASSED("passed"),

    /**
     * Enum value failed.
     */
    FAILED("failed"),

    /**
     * Enum value inconclusive.
     */
    INCONCLUSIVE("inconclusive"),

    /**
     * Enum value timeout.
     */
    TIMEOUT("timeout"),

    /**
     * Enum value aborted.
     */
    ABORTED("aborted"),

    /**
     * Enum value blocked.
     */
    BLOCKED("blocked"),

    /**
     * Enum value notExecuted.
     */
    NOT_EXECUTED("notExecuted"),

    /**
     * Enum value warning.
     */
    WARNING("warning"),

    /**
     * Enum value error.
     */
    ERROR("error"),

    /**
     * Enum value notApplicable.
     */
    NOT_APPLICABLE("notApplicable"),

    /**
     * Enum value paused.
     */
    PAUSED("paused"),

    /**
     * Enum value inProgress.
     */
    IN_PROGRESS("inProgress"),

    /**
     * Enum value notImpacted.
     */
    NOT_IMPACTED("notImpacted");

    /**
     * The actual serialized value for a TestOutcome instance.
     */
    private final String value;

    TestOutcome(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a TestOutcome instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed TestOutcome object, or null if unable to parse.
     */
    @JsonCreator
    public static TestOutcome fromString(String value) {
        if (value == null) {
            return null;
        }
        TestOutcome[] items = TestOutcome.values();
        for (TestOutcome item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
