// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Describes how a phase should run against an agent queue.
 */
@Fluent
public final class AgentPoolQueueTarget extends PhaseTarget {
    /*
     * Agent specification of the target.
     */
    @JsonProperty(value = "agentSpecification")
    private AgentSpecification agentSpecification;

    /*
     * Enables scripts and other processes launched while executing phase to access the OAuth token
     */
    @JsonProperty(value = "allowScriptsAuthAccessOption")
    private Boolean allowScriptsAuthAccessOption;

    /*
     * The demands property.
     */
    @JsonProperty(value = "demands")
    private List<Demand> demands;

    /*
     * The execution options.
     */
    @JsonProperty(value = "executionOptions")
    private AgentTargetExecutionOptions executionOptions;

    /*
     * The queue.
     */
    @JsonProperty(value = "queue")
    private AgentPoolQueue queue;

    /**
     * Creates an instance of AgentPoolQueueTarget class.
     */
    public AgentPoolQueueTarget() {
    }

    /**
     * Get the agentSpecification property: Agent specification of the target.
     * 
     * @return the agentSpecification value.
     */
    public AgentSpecification agentSpecification() {
        return this.agentSpecification;
    }

    /**
     * Set the agentSpecification property: Agent specification of the target.
     * 
     * @param agentSpecification the agentSpecification value to set.
     * @return the AgentPoolQueueTarget object itself.
     */
    public AgentPoolQueueTarget withAgentSpecification(AgentSpecification agentSpecification) {
        this.agentSpecification = agentSpecification;
        return this;
    }

    /**
     * Get the allowScriptsAuthAccessOption property: Enables scripts and other processes launched while executing phase
     * to access the OAuth token.
     * 
     * @return the allowScriptsAuthAccessOption value.
     */
    public Boolean allowScriptsAuthAccessOption() {
        return this.allowScriptsAuthAccessOption;
    }

    /**
     * Set the allowScriptsAuthAccessOption property: Enables scripts and other processes launched while executing phase
     * to access the OAuth token.
     * 
     * @param allowScriptsAuthAccessOption the allowScriptsAuthAccessOption value to set.
     * @return the AgentPoolQueueTarget object itself.
     */
    public AgentPoolQueueTarget withAllowScriptsAuthAccessOption(Boolean allowScriptsAuthAccessOption) {
        this.allowScriptsAuthAccessOption = allowScriptsAuthAccessOption;
        return this;
    }

    /**
     * Get the demands property: The demands property.
     * 
     * @return the demands value.
     */
    public List<Demand> demands() {
        return this.demands;
    }

    /**
     * Set the demands property: The demands property.
     * 
     * @param demands the demands value to set.
     * @return the AgentPoolQueueTarget object itself.
     */
    public AgentPoolQueueTarget withDemands(List<Demand> demands) {
        this.demands = demands;
        return this;
    }

    /**
     * Get the executionOptions property: The execution options.
     * 
     * @return the executionOptions value.
     */
    public AgentTargetExecutionOptions executionOptions() {
        return this.executionOptions;
    }

    /**
     * Set the executionOptions property: The execution options.
     * 
     * @param executionOptions the executionOptions value to set.
     * @return the AgentPoolQueueTarget object itself.
     */
    public AgentPoolQueueTarget withExecutionOptions(AgentTargetExecutionOptions executionOptions) {
        this.executionOptions = executionOptions;
        return this;
    }

    /**
     * Get the queue property: The queue.
     * 
     * @return the queue value.
     */
    public AgentPoolQueue queue() {
        return this.queue;
    }

    /**
     * Set the queue property: The queue.
     * 
     * @param queue the queue value to set.
     * @return the AgentPoolQueueTarget object itself.
     */
    public AgentPoolQueueTarget withQueue(AgentPoolQueue queue) {
        this.queue = queue;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentPoolQueueTarget withType(Integer type) {
        super.withType(type);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (agentSpecification() != null) {
            agentSpecification().validate();
        }
        if (demands() != null) {
            demands().forEach(e -> e.validate());
        }
        if (executionOptions() != null) {
            executionOptions().validate();
        }
        if (queue() != null) {
            queue().validate();
        }
    }
}
