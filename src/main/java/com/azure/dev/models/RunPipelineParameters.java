// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

/**
 * Settings which influence pipeline runs.
 */
@Fluent
public final class RunPipelineParameters {
    /*
     * If true, don't actually create a new run. Instead, return the final YAML document after parsing templates.
     */
    @JsonProperty(value = "previewRun")
    private Boolean previewRun;

    /*
     * The resources the run requires.
     */
    @JsonProperty(value = "resources")
    private RunResourcesParameters resources;

    /*
     * The stagesToSkip property.
     */
    @JsonProperty(value = "stagesToSkip")
    private List<String> stagesToSkip;

    /*
     * Dictionary of <string>
     */
    @JsonProperty(value = "templateParameters")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> templateParameters;

    /*
     * Dictionary of <Variable>
     */
    @JsonProperty(value = "variables")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, Variable> variables;

    /*
     * If you use the preview run option, you may optionally supply different YAML. This allows you to preview the final YAML document without committing a changed file.
     */
    @JsonProperty(value = "yamlOverride")
    private String yamlOverride;

    /**
     * Creates an instance of RunPipelineParameters class.
     */
    public RunPipelineParameters() {
    }

    /**
     * Get the previewRun property: If true, don't actually create a new run. Instead, return the final YAML document
     * after parsing templates.
     * 
     * @return the previewRun value.
     */
    public Boolean previewRun() {
        return this.previewRun;
    }

    /**
     * Set the previewRun property: If true, don't actually create a new run. Instead, return the final YAML document
     * after parsing templates.
     * 
     * @param previewRun the previewRun value to set.
     * @return the RunPipelineParameters object itself.
     */
    public RunPipelineParameters withPreviewRun(Boolean previewRun) {
        this.previewRun = previewRun;
        return this;
    }

    /**
     * Get the resources property: The resources the run requires.
     * 
     * @return the resources value.
     */
    public RunResourcesParameters resources() {
        return this.resources;
    }

    /**
     * Set the resources property: The resources the run requires.
     * 
     * @param resources the resources value to set.
     * @return the RunPipelineParameters object itself.
     */
    public RunPipelineParameters withResources(RunResourcesParameters resources) {
        this.resources = resources;
        return this;
    }

    /**
     * Get the stagesToSkip property: The stagesToSkip property.
     * 
     * @return the stagesToSkip value.
     */
    public List<String> stagesToSkip() {
        return this.stagesToSkip;
    }

    /**
     * Set the stagesToSkip property: The stagesToSkip property.
     * 
     * @param stagesToSkip the stagesToSkip value to set.
     * @return the RunPipelineParameters object itself.
     */
    public RunPipelineParameters withStagesToSkip(List<String> stagesToSkip) {
        this.stagesToSkip = stagesToSkip;
        return this;
    }

    /**
     * Get the templateParameters property: Dictionary of &lt;string&gt;.
     * 
     * @return the templateParameters value.
     */
    public Map<String, String> templateParameters() {
        return this.templateParameters;
    }

    /**
     * Set the templateParameters property: Dictionary of &lt;string&gt;.
     * 
     * @param templateParameters the templateParameters value to set.
     * @return the RunPipelineParameters object itself.
     */
    public RunPipelineParameters withTemplateParameters(Map<String, String> templateParameters) {
        this.templateParameters = templateParameters;
        return this;
    }

    /**
     * Get the variables property: Dictionary of &lt;Variable&gt;.
     * 
     * @return the variables value.
     */
    public Map<String, Variable> variables() {
        return this.variables;
    }

    /**
     * Set the variables property: Dictionary of &lt;Variable&gt;.
     * 
     * @param variables the variables value to set.
     * @return the RunPipelineParameters object itself.
     */
    public RunPipelineParameters withVariables(Map<String, Variable> variables) {
        this.variables = variables;
        return this;
    }

    /**
     * Get the yamlOverride property: If you use the preview run option, you may optionally supply different YAML. This
     * allows you to preview the final YAML document without committing a changed file.
     * 
     * @return the yamlOverride value.
     */
    public String yamlOverride() {
        return this.yamlOverride;
    }

    /**
     * Set the yamlOverride property: If you use the preview run option, you may optionally supply different YAML. This
     * allows you to preview the final YAML document without committing a changed file.
     * 
     * @param yamlOverride the yamlOverride value to set.
     * @return the RunPipelineParameters object itself.
     */
    public RunPipelineParameters withYamlOverride(String yamlOverride) {
        this.yamlOverride = yamlOverride;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resources() != null) {
            resources().validate();
        }
        if (variables() != null) {
            variables().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }
}
