// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The AggregatedRunsByState model.
 */
@Fluent
public final class AggregatedRunsByState {
    /*
     * Dictionary of <AggregatedResultsByOutcome>
     */
    @JsonProperty(value = "resultsByOutcome")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, AggregatedResultsByOutcome> resultsByOutcome;

    /*
     * The runsCount property.
     */
    @JsonProperty(value = "runsCount")
    private Integer runsCount;

    /*
     * The state property.
     */
    @JsonProperty(value = "state")
    private TestRunState state;

    /**
     * Creates an instance of AggregatedRunsByState class.
     */
    public AggregatedRunsByState() {
    }

    /**
     * Get the resultsByOutcome property: Dictionary of &lt;AggregatedResultsByOutcome&gt;.
     * 
     * @return the resultsByOutcome value.
     */
    public Map<String, AggregatedResultsByOutcome> resultsByOutcome() {
        return this.resultsByOutcome;
    }

    /**
     * Set the resultsByOutcome property: Dictionary of &lt;AggregatedResultsByOutcome&gt;.
     * 
     * @param resultsByOutcome the resultsByOutcome value to set.
     * @return the AggregatedRunsByState object itself.
     */
    public AggregatedRunsByState withResultsByOutcome(Map<String, AggregatedResultsByOutcome> resultsByOutcome) {
        this.resultsByOutcome = resultsByOutcome;
        return this;
    }

    /**
     * Get the runsCount property: The runsCount property.
     * 
     * @return the runsCount value.
     */
    public Integer runsCount() {
        return this.runsCount;
    }

    /**
     * Set the runsCount property: The runsCount property.
     * 
     * @param runsCount the runsCount value to set.
     * @return the AggregatedRunsByState object itself.
     */
    public AggregatedRunsByState withRunsCount(Integer runsCount) {
        this.runsCount = runsCount;
        return this;
    }

    /**
     * Get the state property: The state property.
     * 
     * @return the state value.
     */
    public TestRunState state() {
        return this.state;
    }

    /**
     * Set the state property: The state property.
     * 
     * @param state the state value to set.
     * @return the AggregatedRunsByState object itself.
     */
    public AggregatedRunsByState withState(TestRunState state) {
        this.state = state;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resultsByOutcome() != null) {
            resultsByOutcome().values().forEach(e -> {
                if (e != null) {
                    e.validate();
                }
            });
        }
    }
}
