// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * Represents resources used by a build process.
 */
@Fluent
public final class BuildProcessResources {
    /*
     * The endpoints property.
     */
    @JsonProperty(value = "endpoints")
    private List<ServiceEndpointReference> endpoints;

    /*
     * The files property.
     */
    @JsonProperty(value = "files")
    private List<SecureFileReference> files;

    /*
     * The queues property.
     */
    @JsonProperty(value = "queues")
    private List<AgentPoolQueueReference> queues;

    /*
     * The variableGroups property.
     */
    @JsonProperty(value = "variableGroups")
    private List<VariableGroupReference> variableGroups;

    /**
     * Creates an instance of BuildProcessResources class.
     */
    public BuildProcessResources() {
    }

    /**
     * Get the endpoints property: The endpoints property.
     * 
     * @return the endpoints value.
     */
    public List<ServiceEndpointReference> endpoints() {
        return this.endpoints;
    }

    /**
     * Set the endpoints property: The endpoints property.
     * 
     * @param endpoints the endpoints value to set.
     * @return the BuildProcessResources object itself.
     */
    public BuildProcessResources withEndpoints(List<ServiceEndpointReference> endpoints) {
        this.endpoints = endpoints;
        return this;
    }

    /**
     * Get the files property: The files property.
     * 
     * @return the files value.
     */
    public List<SecureFileReference> files() {
        return this.files;
    }

    /**
     * Set the files property: The files property.
     * 
     * @param files the files value to set.
     * @return the BuildProcessResources object itself.
     */
    public BuildProcessResources withFiles(List<SecureFileReference> files) {
        this.files = files;
        return this;
    }

    /**
     * Get the queues property: The queues property.
     * 
     * @return the queues value.
     */
    public List<AgentPoolQueueReference> queues() {
        return this.queues;
    }

    /**
     * Set the queues property: The queues property.
     * 
     * @param queues the queues value to set.
     * @return the BuildProcessResources object itself.
     */
    public BuildProcessResources withQueues(List<AgentPoolQueueReference> queues) {
        this.queues = queues;
        return this;
    }

    /**
     * Get the variableGroups property: The variableGroups property.
     * 
     * @return the variableGroups value.
     */
    public List<VariableGroupReference> variableGroups() {
        return this.variableGroups;
    }

    /**
     * Set the variableGroups property: The variableGroups property.
     * 
     * @param variableGroups the variableGroups value to set.
     * @return the BuildProcessResources object itself.
     */
    public BuildProcessResources withVariableGroups(List<VariableGroupReference> variableGroups) {
        this.variableGroups = variableGroups;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (endpoints() != null) {
            endpoints().forEach(e -> e.validate());
        }
        if (files() != null) {
            files().forEach(e -> e.validate());
        }
        if (queues() != null) {
            queues().forEach(e -> e.validate());
        }
        if (variableGroups() != null) {
            variableGroups().forEach(e -> e.validate());
        }
    }
}
