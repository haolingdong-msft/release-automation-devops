// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.Map;

/**
 * The ArtifactResource model.
 */
@Fluent
public final class ArtifactResource {
    /*
     * The class to represent a collection of REST reference links.
     */
    @JsonProperty(value = "_links")
    private ReferenceLinks links;

    /*
     * Type-specific data about the artifact.
     */
    @JsonProperty(value = "data")
    private String data;

    /*
     * A link to download the resource.
     */
    @JsonProperty(value = "downloadUrl")
    private String downloadUrl;

    /*
     * Type-specific properties of the artifact.
     */
    @JsonProperty(value = "properties")
    @JsonInclude(value = JsonInclude.Include.NON_NULL, content = JsonInclude.Include.ALWAYS)
    private Map<String, String> properties;

    /*
     * The type of the resource: File container, version control folder, UNC path, etc.
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * The full http link to the resource.
     */
    @JsonProperty(value = "url")
    private String url;

    /**
     * Creates an instance of ArtifactResource class.
     */
    public ArtifactResource() {
    }

    /**
     * Get the links property: The class to represent a collection of REST reference links.
     * 
     * @return the links value.
     */
    public ReferenceLinks links() {
        return this.links;
    }

    /**
     * Set the links property: The class to represent a collection of REST reference links.
     * 
     * @param links the links value to set.
     * @return the ArtifactResource object itself.
     */
    public ArtifactResource withLinks(ReferenceLinks links) {
        this.links = links;
        return this;
    }

    /**
     * Get the data property: Type-specific data about the artifact.
     * 
     * @return the data value.
     */
    public String data() {
        return this.data;
    }

    /**
     * Set the data property: Type-specific data about the artifact.
     * 
     * @param data the data value to set.
     * @return the ArtifactResource object itself.
     */
    public ArtifactResource withData(String data) {
        this.data = data;
        return this;
    }

    /**
     * Get the downloadUrl property: A link to download the resource.
     * 
     * @return the downloadUrl value.
     */
    public String downloadUrl() {
        return this.downloadUrl;
    }

    /**
     * Set the downloadUrl property: A link to download the resource.
     * 
     * @param downloadUrl the downloadUrl value to set.
     * @return the ArtifactResource object itself.
     */
    public ArtifactResource withDownloadUrl(String downloadUrl) {
        this.downloadUrl = downloadUrl;
        return this;
    }

    /**
     * Get the properties property: Type-specific properties of the artifact.
     * 
     * @return the properties value.
     */
    public Map<String, String> properties() {
        return this.properties;
    }

    /**
     * Set the properties property: Type-specific properties of the artifact.
     * 
     * @param properties the properties value to set.
     * @return the ArtifactResource object itself.
     */
    public ArtifactResource withProperties(Map<String, String> properties) {
        this.properties = properties;
        return this;
    }

    /**
     * Get the type property: The type of the resource: File container, version control folder, UNC path, etc.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The type of the resource: File container, version control folder, UNC path, etc.
     * 
     * @param type the type value to set.
     * @return the ArtifactResource object itself.
     */
    public ArtifactResource withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the url property: The full http link to the resource.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: The full http link to the resource.
     * 
     * @param url the url value to set.
     * @return the ArtifactResource object itself.
     */
    public ArtifactResource withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (links() != null) {
            links().validate();
        }
    }
}
