// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The reason that the build was created.
 */
public enum BuildReason {
    /**
     * Enum value none.
     */
    NONE("none"),

    /**
     * Enum value manual.
     */
    MANUAL("manual"),

    /**
     * Enum value individualCI.
     */
    INDIVIDUAL_CI("individualCI"),

    /**
     * Enum value batchedCI.
     */
    BATCHED_CI("batchedCI"),

    /**
     * Enum value schedule.
     */
    SCHEDULE("schedule"),

    /**
     * Enum value scheduleForced.
     */
    SCHEDULE_FORCED("scheduleForced"),

    /**
     * Enum value userCreated.
     */
    USER_CREATED("userCreated"),

    /**
     * Enum value validateShelveset.
     */
    VALIDATE_SHELVESET("validateShelveset"),

    /**
     * Enum value checkInShelveset.
     */
    CHECK_IN_SHELVESET("checkInShelveset"),

    /**
     * Enum value pullRequest.
     */
    PULL_REQUEST("pullRequest"),

    /**
     * Enum value buildCompletion.
     */
    BUILD_COMPLETION("buildCompletion"),

    /**
     * Enum value resourceTrigger.
     */
    RESOURCE_TRIGGER("resourceTrigger"),

    /**
     * Enum value triggered.
     */
    TRIGGERED("triggered"),

    /**
     * Enum value all.
     */
    ALL("all");

    /**
     * The actual serialized value for a BuildReason instance.
     */
    private final String value;

    BuildReason(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a BuildReason instance.
     * 
     * @param value the serialized value to parse.
     * @return the parsed BuildReason object, or null if unable to parse.
     */
    @JsonCreator
    public static BuildReason fromString(String value) {
        if (value == null) {
            return null;
        }
        BuildReason[] items = BuildReason.values();
        for (BuildReason item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    /**
     * {@inheritDoc}
     */
    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
