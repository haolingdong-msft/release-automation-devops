// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Job in pipeline. This is related to matrixing in YAML.
 */
@Fluent
public final class JobReference {
    /*
     * Attempt number of the job
     */
    @JsonProperty(value = "attempt")
    private Integer attempt;

    /*
     * Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is the name of those input. Maximum supported length for name is 256 character.
     */
    @JsonProperty(value = "jobName")
    private String jobName;

    /**
     * Creates an instance of JobReference class.
     */
    public JobReference() {
    }

    /**
     * Get the attempt property: Attempt number of the job.
     * 
     * @return the attempt value.
     */
    public Integer attempt() {
        return this.attempt;
    }

    /**
     * Set the attempt property: Attempt number of the job.
     * 
     * @param attempt the attempt value to set.
     * @return the JobReference object itself.
     */
    public JobReference withAttempt(Integer attempt) {
        this.attempt = attempt;
        return this;
    }

    /**
     * Get the jobName property: Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is
     * the name of those input. Maximum supported length for name is 256 character.
     * 
     * @return the jobName value.
     */
    public String jobName() {
        return this.jobName;
    }

    /**
     * Set the jobName property: Matrixing in YAML generates copies of a job with different inputs in matrix. JobName is
     * the name of those input. Maximum supported length for name is 256 character.
     * 
     * @param jobName the jobName value to set.
     * @return the JobReference object itself.
     */
    public JobReference withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
