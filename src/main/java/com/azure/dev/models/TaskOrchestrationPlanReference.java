// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.UUID;

/**
 * Represents a reference to an orchestration plan.
 */
@Fluent
public final class TaskOrchestrationPlanReference {
    /*
     * The type of the plan.
     */
    @JsonProperty(value = "orchestrationType")
    private Integer orchestrationType;

    /*
     * The ID of the plan.
     */
    @JsonProperty(value = "planId")
    private UUID planId;

    /**
     * Creates an instance of TaskOrchestrationPlanReference class.
     */
    public TaskOrchestrationPlanReference() {
    }

    /**
     * Get the orchestrationType property: The type of the plan.
     * 
     * @return the orchestrationType value.
     */
    public Integer orchestrationType() {
        return this.orchestrationType;
    }

    /**
     * Set the orchestrationType property: The type of the plan.
     * 
     * @param orchestrationType the orchestrationType value to set.
     * @return the TaskOrchestrationPlanReference object itself.
     */
    public TaskOrchestrationPlanReference withOrchestrationType(Integer orchestrationType) {
        this.orchestrationType = orchestrationType;
        return this;
    }

    /**
     * Get the planId property: The ID of the plan.
     * 
     * @return the planId value.
     */
    public UUID planId() {
        return this.planId;
    }

    /**
     * Set the planId property: The ID of the plan.
     * 
     * @param planId the planId value to set.
     * @return the TaskOrchestrationPlanReference object itself.
     */
    public TaskOrchestrationPlanReference withPlanId(UUID planId) {
        this.planId = planId;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
