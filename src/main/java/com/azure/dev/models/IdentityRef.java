// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The IdentityRef model.
 */
@Fluent
public final class IdentityRef extends GraphSubjectBase {
    /*
     * Deprecated - Can be retrieved by querying the Graph user referenced in the "self" entry of the IdentityRef "_links" dictionary
     */
    @JsonProperty(value = "directoryAlias")
    private String directoryAlias;

    /*
     * The id property.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * Deprecated - Available in the "avatar" entry of the IdentityRef "_links" dictionary
     */
    @JsonProperty(value = "imageUrl")
    private String imageUrl;

    /*
     * Deprecated - Can be retrieved by querying the Graph membership state referenced in the "membershipState" entry of the GraphUser "_links" dictionary
     */
    @JsonProperty(value = "inactive")
    private Boolean inactive;

    /*
     * Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)
     */
    @JsonProperty(value = "isAadIdentity")
    private Boolean isAadIdentity;

    /*
     * Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)
     */
    @JsonProperty(value = "isContainer")
    private Boolean isContainer;

    /*
     * The isDeletedInOrigin property.
     */
    @JsonProperty(value = "isDeletedInOrigin")
    private Boolean isDeletedInOrigin;

    /*
     * Deprecated - not in use in most preexisting implementations of ToIdentityRef
     */
    @JsonProperty(value = "profileUrl")
    private String profileUrl;

    /*
     * Deprecated - use Domain+PrincipalName instead
     */
    @JsonProperty(value = "uniqueName")
    private String uniqueName;

    /**
     * Creates an instance of IdentityRef class.
     */
    public IdentityRef() {
    }

    /**
     * Get the directoryAlias property: Deprecated - Can be retrieved by querying the Graph user referenced in the
     * "self" entry of the IdentityRef "_links" dictionary.
     * 
     * @return the directoryAlias value.
     */
    public String directoryAlias() {
        return this.directoryAlias;
    }

    /**
     * Set the directoryAlias property: Deprecated - Can be retrieved by querying the Graph user referenced in the
     * "self" entry of the IdentityRef "_links" dictionary.
     * 
     * @param directoryAlias the directoryAlias value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withDirectoryAlias(String directoryAlias) {
        this.directoryAlias = directoryAlias;
        return this;
    }

    /**
     * Get the id property: The id property.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The id property.
     * 
     * @param id the id value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the imageUrl property: Deprecated - Available in the "avatar" entry of the IdentityRef "_links" dictionary.
     * 
     * @return the imageUrl value.
     */
    public String imageUrl() {
        return this.imageUrl;
    }

    /**
     * Set the imageUrl property: Deprecated - Available in the "avatar" entry of the IdentityRef "_links" dictionary.
     * 
     * @param imageUrl the imageUrl value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }

    /**
     * Get the inactive property: Deprecated - Can be retrieved by querying the Graph membership state referenced in the
     * "membershipState" entry of the GraphUser "_links" dictionary.
     * 
     * @return the inactive value.
     */
    public Boolean inactive() {
        return this.inactive;
    }

    /**
     * Set the inactive property: Deprecated - Can be retrieved by querying the Graph membership state referenced in the
     * "membershipState" entry of the GraphUser "_links" dictionary.
     * 
     * @param inactive the inactive value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withInactive(Boolean inactive) {
        this.inactive = inactive;
        return this;
    }

    /**
     * Get the isAadIdentity property: Deprecated - Can be inferred from the subject type of the descriptor
     * (Descriptor.IsAadUserType/Descriptor.IsAadGroupType).
     * 
     * @return the isAadIdentity value.
     */
    public Boolean isAadIdentity() {
        return this.isAadIdentity;
    }

    /**
     * Set the isAadIdentity property: Deprecated - Can be inferred from the subject type of the descriptor
     * (Descriptor.IsAadUserType/Descriptor.IsAadGroupType).
     * 
     * @param isAadIdentity the isAadIdentity value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withIsAadIdentity(Boolean isAadIdentity) {
        this.isAadIdentity = isAadIdentity;
        return this;
    }

    /**
     * Get the isContainer property: Deprecated - Can be inferred from the subject type of the descriptor
     * (Descriptor.IsGroupType).
     * 
     * @return the isContainer value.
     */
    public Boolean isContainer() {
        return this.isContainer;
    }

    /**
     * Set the isContainer property: Deprecated - Can be inferred from the subject type of the descriptor
     * (Descriptor.IsGroupType).
     * 
     * @param isContainer the isContainer value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withIsContainer(Boolean isContainer) {
        this.isContainer = isContainer;
        return this;
    }

    /**
     * Get the isDeletedInOrigin property: The isDeletedInOrigin property.
     * 
     * @return the isDeletedInOrigin value.
     */
    public Boolean isDeletedInOrigin() {
        return this.isDeletedInOrigin;
    }

    /**
     * Set the isDeletedInOrigin property: The isDeletedInOrigin property.
     * 
     * @param isDeletedInOrigin the isDeletedInOrigin value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withIsDeletedInOrigin(Boolean isDeletedInOrigin) {
        this.isDeletedInOrigin = isDeletedInOrigin;
        return this;
    }

    /**
     * Get the profileUrl property: Deprecated - not in use in most preexisting implementations of ToIdentityRef.
     * 
     * @return the profileUrl value.
     */
    public String profileUrl() {
        return this.profileUrl;
    }

    /**
     * Set the profileUrl property: Deprecated - not in use in most preexisting implementations of ToIdentityRef.
     * 
     * @param profileUrl the profileUrl value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withProfileUrl(String profileUrl) {
        this.profileUrl = profileUrl;
        return this;
    }

    /**
     * Get the uniqueName property: Deprecated - use Domain+PrincipalName instead.
     * 
     * @return the uniqueName value.
     */
    public String uniqueName() {
        return this.uniqueName;
    }

    /**
     * Set the uniqueName property: Deprecated - use Domain+PrincipalName instead.
     * 
     * @param uniqueName the uniqueName value to set.
     * @return the IdentityRef object itself.
     */
    public IdentityRef withUniqueName(String uniqueName) {
        this.uniqueName = uniqueName;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityRef withLinks(ReferenceLinks links) {
        super.withLinks(links);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityRef withDescriptor(String descriptor) {
        super.withDescriptor(descriptor);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityRef withDisplayName(String displayName) {
        super.withDisplayName(displayName);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityRef withUrl(String url) {
        super.withUrl(url);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
