// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import java.time.OffsetDateTime;
import java.util.List;

/**
 * Resource collection API of Metrics.
 */
public interface Metrics {
    /**
     * Gets build metrics for a definition.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param project Project ID or project name.
     * @param definitionId The ID of the definition.
     * @param minMetricsTime The date from which to calculate metrics.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return build metrics for a definition along with {@link Response}.
     */
    Response<List<BuildMetric>> getDefinitionMetricsWithResponse(String organization, String project, int definitionId,
        OffsetDateTime minMetricsTime, Context context);

    /**
     * Gets build metrics for a definition.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param project Project ID or project name.
     * @param definitionId The ID of the definition.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return build metrics for a definition.
     */
    List<BuildMetric> getDefinitionMetrics(String organization, String project, int definitionId);

    /**
     * Gets build metrics for a project.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param project Project ID or project name.
     * @param metricAggregationType The aggregation type to use (hourly, daily).
     * @param minMetricsTime The date from which to calculate metrics.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return build metrics for a project along with {@link Response}.
     */
    Response<List<BuildMetric>> getProjectMetricsWithResponse(String organization, String project,
        String metricAggregationType, OffsetDateTime minMetricsTime, Context context);

    /**
     * Gets build metrics for a project.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param project Project ID or project name.
     * @param metricAggregationType The aggregation type to use (hourly, daily).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return build metrics for a project.
     */
    List<BuildMetric> getProjectMetrics(String organization, String project, String metricAggregationType);
}
