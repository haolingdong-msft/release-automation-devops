// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Contains members for updating the retention settings values. All fields are optional.
 */
@Fluent
public final class UpdateProjectRetentionSettingModel {
    /*
     * The artifactsRetention property.
     */
    @JsonProperty(value = "artifactsRetention")
    private UpdateRetentionSettingModel artifactsRetention;

    /*
     * The pullRequestRunRetention property.
     */
    @JsonProperty(value = "pullRequestRunRetention")
    private UpdateRetentionSettingModel pullRequestRunRetention;

    /*
     * The retainRunsPerProtectedBranch property.
     */
    @JsonProperty(value = "retainRunsPerProtectedBranch")
    private UpdateRetentionSettingModel retainRunsPerProtectedBranch;

    /*
     * The runRetention property.
     */
    @JsonProperty(value = "runRetention")
    private UpdateRetentionSettingModel runRetention;

    /**
     * Creates an instance of UpdateProjectRetentionSettingModel class.
     */
    public UpdateProjectRetentionSettingModel() {
    }

    /**
     * Get the artifactsRetention property: The artifactsRetention property.
     * 
     * @return the artifactsRetention value.
     */
    public UpdateRetentionSettingModel artifactsRetention() {
        return this.artifactsRetention;
    }

    /**
     * Set the artifactsRetention property: The artifactsRetention property.
     * 
     * @param artifactsRetention the artifactsRetention value to set.
     * @return the UpdateProjectRetentionSettingModel object itself.
     */
    public UpdateProjectRetentionSettingModel withArtifactsRetention(UpdateRetentionSettingModel artifactsRetention) {
        this.artifactsRetention = artifactsRetention;
        return this;
    }

    /**
     * Get the pullRequestRunRetention property: The pullRequestRunRetention property.
     * 
     * @return the pullRequestRunRetention value.
     */
    public UpdateRetentionSettingModel pullRequestRunRetention() {
        return this.pullRequestRunRetention;
    }

    /**
     * Set the pullRequestRunRetention property: The pullRequestRunRetention property.
     * 
     * @param pullRequestRunRetention the pullRequestRunRetention value to set.
     * @return the UpdateProjectRetentionSettingModel object itself.
     */
    public UpdateProjectRetentionSettingModel
        withPullRequestRunRetention(UpdateRetentionSettingModel pullRequestRunRetention) {
        this.pullRequestRunRetention = pullRequestRunRetention;
        return this;
    }

    /**
     * Get the retainRunsPerProtectedBranch property: The retainRunsPerProtectedBranch property.
     * 
     * @return the retainRunsPerProtectedBranch value.
     */
    public UpdateRetentionSettingModel retainRunsPerProtectedBranch() {
        return this.retainRunsPerProtectedBranch;
    }

    /**
     * Set the retainRunsPerProtectedBranch property: The retainRunsPerProtectedBranch property.
     * 
     * @param retainRunsPerProtectedBranch the retainRunsPerProtectedBranch value to set.
     * @return the UpdateProjectRetentionSettingModel object itself.
     */
    public UpdateProjectRetentionSettingModel
        withRetainRunsPerProtectedBranch(UpdateRetentionSettingModel retainRunsPerProtectedBranch) {
        this.retainRunsPerProtectedBranch = retainRunsPerProtectedBranch;
        return this;
    }

    /**
     * Get the runRetention property: The runRetention property.
     * 
     * @return the runRetention value.
     */
    public UpdateRetentionSettingModel runRetention() {
        return this.runRetention;
    }

    /**
     * Set the runRetention property: The runRetention property.
     * 
     * @param runRetention the runRetention value to set.
     * @return the UpdateProjectRetentionSettingModel object itself.
     */
    public UpdateProjectRetentionSettingModel withRunRetention(UpdateRetentionSettingModel runRetention) {
        this.runRetention = runRetention;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (artifactsRetention() != null) {
            artifactsRetention().validate();
        }
        if (pullRequestRunRetention() != null) {
            pullRequestRunRetention().validate();
        }
        if (retainRunsPerProtectedBranch() != null) {
            retainRunsPerProtectedBranch().validate();
        }
        if (runRetention() != null) {
            runRetention().validate();
        }
    }
}
