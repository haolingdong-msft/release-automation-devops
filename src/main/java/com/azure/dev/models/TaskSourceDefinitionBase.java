// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * The TaskSourceDefinitionBase model.
 */
@Fluent
public final class TaskSourceDefinitionBase {
    /*
     * The authKey property.
     */
    @JsonProperty(value = "authKey")
    private String authKey;

    /*
     * The endpoint property.
     */
    @JsonProperty(value = "endpoint")
    private String endpoint;

    /*
     * The keySelector property.
     */
    @JsonProperty(value = "keySelector")
    private String keySelector;

    /*
     * The selector property.
     */
    @JsonProperty(value = "selector")
    private String selector;

    /*
     * The target property.
     */
    @JsonProperty(value = "target")
    private String target;

    /**
     * Creates an instance of TaskSourceDefinitionBase class.
     */
    public TaskSourceDefinitionBase() {
    }

    /**
     * Get the authKey property: The authKey property.
     * 
     * @return the authKey value.
     */
    public String authKey() {
        return this.authKey;
    }

    /**
     * Set the authKey property: The authKey property.
     * 
     * @param authKey the authKey value to set.
     * @return the TaskSourceDefinitionBase object itself.
     */
    public TaskSourceDefinitionBase withAuthKey(String authKey) {
        this.authKey = authKey;
        return this;
    }

    /**
     * Get the endpoint property: The endpoint property.
     * 
     * @return the endpoint value.
     */
    public String endpoint() {
        return this.endpoint;
    }

    /**
     * Set the endpoint property: The endpoint property.
     * 
     * @param endpoint the endpoint value to set.
     * @return the TaskSourceDefinitionBase object itself.
     */
    public TaskSourceDefinitionBase withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Get the keySelector property: The keySelector property.
     * 
     * @return the keySelector value.
     */
    public String keySelector() {
        return this.keySelector;
    }

    /**
     * Set the keySelector property: The keySelector property.
     * 
     * @param keySelector the keySelector value to set.
     * @return the TaskSourceDefinitionBase object itself.
     */
    public TaskSourceDefinitionBase withKeySelector(String keySelector) {
        this.keySelector = keySelector;
        return this;
    }

    /**
     * Get the selector property: The selector property.
     * 
     * @return the selector value.
     */
    public String selector() {
        return this.selector;
    }

    /**
     * Set the selector property: The selector property.
     * 
     * @param selector the selector value to set.
     * @return the TaskSourceDefinitionBase object itself.
     */
    public TaskSourceDefinitionBase withSelector(String selector) {
        this.selector = selector;
        return this;
    }

    /**
     * Get the target property: The target property.
     * 
     * @return the target value.
     */
    public String target() {
        return this.target;
    }

    /**
     * Set the target property: The target property.
     * 
     * @param target the target value to set.
     * @return the TaskSourceDefinitionBase object itself.
     */
    public TaskSourceDefinitionBase withTarget(String target) {
        this.target = target;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
