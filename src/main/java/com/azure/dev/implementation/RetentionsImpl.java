// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.dev.fluent.RetentionsClient;
import com.azure.dev.fluent.models.ProjectRetentionSettingInner;
import com.azure.dev.models.ProjectRetentionSetting;
import com.azure.dev.models.Retentions;
import com.azure.dev.models.UpdateProjectRetentionSettingModel;

public final class RetentionsImpl implements Retentions {
    private static final ClientLogger LOGGER = new ClientLogger(RetentionsImpl.class);

    private final RetentionsClient innerClient;

    private final com.azure.dev.DevManager serviceManager;

    public RetentionsImpl(RetentionsClient innerClient, com.azure.dev.DevManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<ProjectRetentionSetting> getWithResponse(String organization, String project, Context context) {
        Response<ProjectRetentionSettingInner> inner
            = this.serviceClient().getWithResponse(organization, project, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ProjectRetentionSettingImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ProjectRetentionSetting get(String organization, String project) {
        ProjectRetentionSettingInner inner = this.serviceClient().get(organization, project);
        if (inner != null) {
            return new ProjectRetentionSettingImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<ProjectRetentionSetting> updateWithResponse(String organization, String project,
        UpdateProjectRetentionSettingModel body, Context context) {
        Response<ProjectRetentionSettingInner> inner
            = this.serviceClient().updateWithResponse(organization, project, body, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new ProjectRetentionSettingImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public ProjectRetentionSetting update(String organization, String project,
        UpdateProjectRetentionSettingModel body) {
        ProjectRetentionSettingInner inner = this.serviceClient().update(organization, project, body);
        if (inner != null) {
            return new ProjectRetentionSettingImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private RetentionsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.dev.DevManager manager() {
        return this.serviceManager;
    }
}
