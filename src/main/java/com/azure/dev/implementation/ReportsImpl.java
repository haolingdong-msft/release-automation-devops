// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.dev.fluent.ReportsClient;
import com.azure.dev.fluent.models.BuildReportMetadataInner;
import com.azure.dev.models.BuildReportMetadata;
import com.azure.dev.models.Reports;

public final class ReportsImpl implements Reports {
    private static final ClientLogger LOGGER = new ClientLogger(ReportsImpl.class);

    private final ReportsClient innerClient;

    private final com.azure.dev.DevManager serviceManager;

    public ReportsImpl(ReportsClient innerClient, com.azure.dev.DevManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<BuildReportMetadata> getWithResponse(String organization, String project, int buildId, String type,
        Context context) {
        Response<BuildReportMetadataInner> inner
            = this.serviceClient().getWithResponse(organization, project, buildId, type, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BuildReportMetadataImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BuildReportMetadata get(String organization, String project, int buildId) {
        BuildReportMetadataInner inner = this.serviceClient().get(organization, project, buildId);
        if (inner != null) {
            return new BuildReportMetadataImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private ReportsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.dev.DevManager manager() {
        return this.serviceManager;
    }
}
