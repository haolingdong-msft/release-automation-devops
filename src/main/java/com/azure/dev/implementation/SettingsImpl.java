// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import com.azure.dev.fluent.SettingsClient;
import com.azure.dev.fluent.models.BuildSettingsInner;
import com.azure.dev.models.BuildSettings;
import com.azure.dev.models.Settings;

public final class SettingsImpl implements Settings {
    private static final ClientLogger LOGGER = new ClientLogger(SettingsImpl.class);

    private final SettingsClient innerClient;

    private final com.azure.dev.DevManager serviceManager;

    public SettingsImpl(SettingsClient innerClient, com.azure.dev.DevManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<BuildSettings> getWithResponse(String organization, String project, Context context) {
        Response<BuildSettingsInner> inner = this.serviceClient().getWithResponse(organization, project, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BuildSettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BuildSettings get(String organization, String project) {
        BuildSettingsInner inner = this.serviceClient().get(organization, project);
        if (inner != null) {
            return new BuildSettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public Response<BuildSettings> updateWithResponse(String organization, String project, BuildSettingsInner body,
        Context context) {
        Response<BuildSettingsInner> inner
            = this.serviceClient().updateWithResponse(organization, project, body, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new BuildSettingsImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public BuildSettings update(String organization, String project, BuildSettingsInner body) {
        BuildSettingsInner inner = this.serviceClient().update(organization, project, body);
        if (inner != null) {
            return new BuildSettingsImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private SettingsClient serviceClient() {
        return this.innerClient;
    }

    private com.azure.dev.DevManager manager() {
        return this.serviceManager;
    }
}
