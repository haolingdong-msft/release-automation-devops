// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent;

import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;
import com.azure.dev.fluent.models.BuildControllerInner;
import java.util.List;

/**
 * An instance of this class provides access to all the operations defined in ControllersClient.
 */
public interface ControllersClient {
    /**
     * Gets controller, optionally filtered by name.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param name The name parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return controller, optionally filtered by name along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<List<BuildControllerInner>> listWithResponse(String organization, String name, Context context);

    /**
     * Gets controller, optionally filtered by name.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return controller, optionally filtered by name.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    List<BuildControllerInner> list(String organization);

    /**
     * Gets a controller.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param controllerId The controllerId parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a controller along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<BuildControllerInner> getWithResponse(String organization, int controllerId, Context context);

    /**
     * Gets a controller.
     * 
     * @param organization The name of the Azure DevOps organization.
     * @param controllerId The controllerId parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a controller.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    BuildControllerInner get(String organization, int controllerId);
}
