// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.dev.models.PipelineBase;
import com.azure.dev.models.PipelineConfiguration;
import com.azure.dev.models.ReferenceLinks;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Definition of a pipeline.
 */
@Fluent
public final class PipelineInner extends PipelineBase {
    /*
     * The class to represent a collection of REST reference links.
     */
    @JsonProperty(value = "_links")
    private ReferenceLinks links;

    /*
     * The configuration property.
     */
    @JsonProperty(value = "configuration")
    private PipelineConfiguration configuration;

    /*
     * URL of the pipeline
     */
    @JsonProperty(value = "url")
    private String url;

    /**
     * Creates an instance of PipelineInner class.
     */
    public PipelineInner() {
    }

    /**
     * Get the links property: The class to represent a collection of REST reference links.
     * 
     * @return the links value.
     */
    public ReferenceLinks links() {
        return this.links;
    }

    /**
     * Set the links property: The class to represent a collection of REST reference links.
     * 
     * @param links the links value to set.
     * @return the PipelineInner object itself.
     */
    public PipelineInner withLinks(ReferenceLinks links) {
        this.links = links;
        return this;
    }

    /**
     * Get the configuration property: The configuration property.
     * 
     * @return the configuration value.
     */
    public PipelineConfiguration configuration() {
        return this.configuration;
    }

    /**
     * Set the configuration property: The configuration property.
     * 
     * @param configuration the configuration value to set.
     * @return the PipelineInner object itself.
     */
    public PipelineInner withConfiguration(PipelineConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }

    /**
     * Get the url property: URL of the pipeline.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: URL of the pipeline.
     * 
     * @param url the url value to set.
     * @return the PipelineInner object itself.
     */
    public PipelineInner withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelineInner withFolder(String folder) {
        super.withFolder(folder);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelineInner withId(Integer id) {
        super.withId(id);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelineInner withName(String name) {
        super.withName(name);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PipelineInner withRevision(Integer revision) {
        super.withRevision(revision);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
        if (links() != null) {
            links().validate();
        }
        if (configuration() != null) {
            configuration().validate();
        }
    }
}
