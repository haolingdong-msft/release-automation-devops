// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.dev.models.BuildLogReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Represents a build log.
 */
@Fluent
public final class BuildLogInner extends BuildLogReference {
    /*
     * The date and time the log was created.
     */
    @JsonProperty(value = "createdOn")
    private OffsetDateTime createdOn;

    /*
     * The date and time the log was last changed.
     */
    @JsonProperty(value = "lastChangedOn")
    private OffsetDateTime lastChangedOn;

    /*
     * The number of lines in the log.
     */
    @JsonProperty(value = "lineCount")
    private Long lineCount;

    /**
     * Creates an instance of BuildLogInner class.
     */
    public BuildLogInner() {
    }

    /**
     * Get the createdOn property: The date and time the log was created.
     * 
     * @return the createdOn value.
     */
    public OffsetDateTime createdOn() {
        return this.createdOn;
    }

    /**
     * Set the createdOn property: The date and time the log was created.
     * 
     * @param createdOn the createdOn value to set.
     * @return the BuildLogInner object itself.
     */
    public BuildLogInner withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Get the lastChangedOn property: The date and time the log was last changed.
     * 
     * @return the lastChangedOn value.
     */
    public OffsetDateTime lastChangedOn() {
        return this.lastChangedOn;
    }

    /**
     * Set the lastChangedOn property: The date and time the log was last changed.
     * 
     * @param lastChangedOn the lastChangedOn value to set.
     * @return the BuildLogInner object itself.
     */
    public BuildLogInner withLastChangedOn(OffsetDateTime lastChangedOn) {
        this.lastChangedOn = lastChangedOn;
        return this;
    }

    /**
     * Get the lineCount property: The number of lines in the log.
     * 
     * @return the lineCount value.
     */
    public Long lineCount() {
        return this.lineCount;
    }

    /**
     * Set the lineCount property: The number of lines in the log.
     * 
     * @param lineCount the lineCount value to set.
     * @return the BuildLogInner object itself.
     */
    public BuildLogInner withLineCount(Long lineCount) {
        this.lineCount = lineCount;
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildLogInner withId(Integer id) {
        super.withId(id);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildLogInner withType(String type) {
        super.withType(type);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BuildLogInner withUrl(String url) {
        super.withUrl(url);
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    @Override
    public void validate() {
        super.validate();
    }
}
