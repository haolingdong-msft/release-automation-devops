// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents an item in a repository from a source provider.
 */
@Fluent
public final class SourceRepositoryItemInner {
    /*
     * Whether the item is able to have sub-items (e.g., is a folder).
     */
    @JsonProperty(value = "isContainer")
    private Boolean isContainer;

    /*
     * The full path of the item, relative to the root of the repository.
     */
    @JsonProperty(value = "path")
    private String path;

    /*
     * The type of the item (folder, file, etc).
     */
    @JsonProperty(value = "type")
    private String type;

    /*
     * The URL of the item.
     */
    @JsonProperty(value = "url")
    private String url;

    /**
     * Creates an instance of SourceRepositoryItemInner class.
     */
    public SourceRepositoryItemInner() {
    }

    /**
     * Get the isContainer property: Whether the item is able to have sub-items (e.g., is a folder).
     * 
     * @return the isContainer value.
     */
    public Boolean isContainer() {
        return this.isContainer;
    }

    /**
     * Set the isContainer property: Whether the item is able to have sub-items (e.g., is a folder).
     * 
     * @param isContainer the isContainer value to set.
     * @return the SourceRepositoryItemInner object itself.
     */
    public SourceRepositoryItemInner withIsContainer(Boolean isContainer) {
        this.isContainer = isContainer;
        return this;
    }

    /**
     * Get the path property: The full path of the item, relative to the root of the repository.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: The full path of the item, relative to the root of the repository.
     * 
     * @param path the path value to set.
     * @return the SourceRepositoryItemInner object itself.
     */
    public SourceRepositoryItemInner withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the type property: The type of the item (folder, file, etc).
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The type of the item (folder, file, etc).
     * 
     * @param type the type value to set.
     * @return the SourceRepositoryItemInner object itself.
     */
    public SourceRepositoryItemInner withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Get the url property: The URL of the item.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: The URL of the item.
     * 
     * @param url the url value to set.
     * @return the SourceRepositoryItemInner object itself.
     */
    public SourceRepositoryItemInner withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }
}
