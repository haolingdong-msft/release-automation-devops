// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.dev.models.SignedUrl;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/**
 * A collection of logs.
 */
@Fluent
public final class LogCollectionInner {
    /*
     * The list of logs.
     */
    @JsonProperty(value = "logs")
    private List<LogInner> logs;

    /*
     * A signed url allowing limited-time anonymous access to private resources.
     */
    @JsonProperty(value = "signedContent")
    private SignedUrl signedContent;

    /*
     * URL of the log.
     */
    @JsonProperty(value = "url")
    private String url;

    /**
     * Creates an instance of LogCollectionInner class.
     */
    public LogCollectionInner() {
    }

    /**
     * Get the logs property: The list of logs.
     * 
     * @return the logs value.
     */
    public List<LogInner> logs() {
        return this.logs;
    }

    /**
     * Set the logs property: The list of logs.
     * 
     * @param logs the logs value to set.
     * @return the LogCollectionInner object itself.
     */
    public LogCollectionInner withLogs(List<LogInner> logs) {
        this.logs = logs;
        return this;
    }

    /**
     * Get the signedContent property: A signed url allowing limited-time anonymous access to private resources.
     * 
     * @return the signedContent value.
     */
    public SignedUrl signedContent() {
        return this.signedContent;
    }

    /**
     * Set the signedContent property: A signed url allowing limited-time anonymous access to private resources.
     * 
     * @param signedContent the signedContent value to set.
     * @return the LogCollectionInner object itself.
     */
    public LogCollectionInner withSignedContent(SignedUrl signedContent) {
        this.signedContent = signedContent;
        return this;
    }

    /**
     * Get the url property: URL of the log.
     * 
     * @return the url value.
     */
    public String url() {
        return this.url;
    }

    /**
     * Set the url property: URL of the log.
     * 
     * @param url the url value to set.
     * @return the LogCollectionInner object itself.
     */
    public LogCollectionInner withUrl(String url) {
        this.url = url;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (logs() != null) {
            logs().forEach(e -> e.validate());
        }
        if (signedContent() != null) {
            signedContent().validate();
        }
    }
}
