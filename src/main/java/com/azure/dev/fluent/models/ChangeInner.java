// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.dev.models.IdentityRef;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Represents a change associated with a build.
 */
@Fluent
public final class ChangeInner {
    /*
     * The author of the change.
     */
    @JsonProperty(value = "author")
    private IdentityRef author;

    /*
     * The location of a user-friendly representation of the resource.
     */
    @JsonProperty(value = "displayUri")
    private String displayUri;

    /*
     * The identifier for the change. For a commit, this would be the SHA1. For a TFVC changeset, this would be the changeset ID.
     */
    @JsonProperty(value = "id")
    private String id;

    /*
     * The location of the full representation of the resource.
     */
    @JsonProperty(value = "location")
    private String location;

    /*
     * The description of the change. This might be a commit message or changeset description.
     */
    @JsonProperty(value = "message")
    private String message;

    /*
     * Indicates whether the message was truncated.
     */
    @JsonProperty(value = "messageTruncated")
    private Boolean messageTruncated;

    /*
     * The person or process that pushed the change.
     */
    @JsonProperty(value = "pusher")
    private String pusher;

    /*
     * The timestamp for the change.
     */
    @JsonProperty(value = "timestamp")
    private OffsetDateTime timestamp;

    /*
     * The type of change. "commit", "changeset", etc.
     */
    @JsonProperty(value = "type")
    private String type;

    /**
     * Creates an instance of ChangeInner class.
     */
    public ChangeInner() {
    }

    /**
     * Get the author property: The author of the change.
     * 
     * @return the author value.
     */
    public IdentityRef author() {
        return this.author;
    }

    /**
     * Set the author property: The author of the change.
     * 
     * @param author the author value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withAuthor(IdentityRef author) {
        this.author = author;
        return this;
    }

    /**
     * Get the displayUri property: The location of a user-friendly representation of the resource.
     * 
     * @return the displayUri value.
     */
    public String displayUri() {
        return this.displayUri;
    }

    /**
     * Set the displayUri property: The location of a user-friendly representation of the resource.
     * 
     * @param displayUri the displayUri value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withDisplayUri(String displayUri) {
        this.displayUri = displayUri;
        return this;
    }

    /**
     * Get the id property: The identifier for the change. For a commit, this would be the SHA1. For a TFVC changeset,
     * this would be the changeset ID.
     * 
     * @return the id value.
     */
    public String id() {
        return this.id;
    }

    /**
     * Set the id property: The identifier for the change. For a commit, this would be the SHA1. For a TFVC changeset,
     * this would be the changeset ID.
     * 
     * @param id the id value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withId(String id) {
        this.id = id;
        return this;
    }

    /**
     * Get the location property: The location of the full representation of the resource.
     * 
     * @return the location value.
     */
    public String location() {
        return this.location;
    }

    /**
     * Set the location property: The location of the full representation of the resource.
     * 
     * @param location the location value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withLocation(String location) {
        this.location = location;
        return this;
    }

    /**
     * Get the message property: The description of the change. This might be a commit message or changeset description.
     * 
     * @return the message value.
     */
    public String message() {
        return this.message;
    }

    /**
     * Set the message property: The description of the change. This might be a commit message or changeset description.
     * 
     * @param message the message value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withMessage(String message) {
        this.message = message;
        return this;
    }

    /**
     * Get the messageTruncated property: Indicates whether the message was truncated.
     * 
     * @return the messageTruncated value.
     */
    public Boolean messageTruncated() {
        return this.messageTruncated;
    }

    /**
     * Set the messageTruncated property: Indicates whether the message was truncated.
     * 
     * @param messageTruncated the messageTruncated value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withMessageTruncated(Boolean messageTruncated) {
        this.messageTruncated = messageTruncated;
        return this;
    }

    /**
     * Get the pusher property: The person or process that pushed the change.
     * 
     * @return the pusher value.
     */
    public String pusher() {
        return this.pusher;
    }

    /**
     * Set the pusher property: The person or process that pushed the change.
     * 
     * @param pusher the pusher value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withPusher(String pusher) {
        this.pusher = pusher;
        return this;
    }

    /**
     * Get the timestamp property: The timestamp for the change.
     * 
     * @return the timestamp value.
     */
    public OffsetDateTime timestamp() {
        return this.timestamp;
    }

    /**
     * Set the timestamp property: The timestamp for the change.
     * 
     * @param timestamp the timestamp value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    /**
     * Get the type property: The type of change. "commit", "changeset", etc.
     * 
     * @return the type value.
     */
    public String type() {
        return this.type;
    }

    /**
     * Set the type property: The type of change. "commit", "changeset", etc.
     * 
     * @param type the type value to set.
     * @return the ChangeInner object itself.
     */
    public ChangeInner withType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (author() != null) {
            author().validate();
        }
    }
}
