// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.dev.models.ArtifactResource;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Represents an artifact produced by a build.
 */
@Fluent
public final class BuildArtifactInner {
    /*
     * The artifact ID.
     */
    @JsonProperty(value = "id")
    private Integer id;

    /*
     * The name of the artifact.
     */
    @JsonProperty(value = "name")
    private String name;

    /*
     * The actual resource.
     */
    @JsonProperty(value = "resource")
    private ArtifactResource resource;

    /*
     * The artifact source, which will be the ID of the job that produced this artifact. If an artifact is associated with multiple sources, this points to the first source.
     */
    @JsonProperty(value = "source")
    private String source;

    /**
     * Creates an instance of BuildArtifactInner class.
     */
    public BuildArtifactInner() {
    }

    /**
     * Get the id property: The artifact ID.
     * 
     * @return the id value.
     */
    public Integer id() {
        return this.id;
    }

    /**
     * Set the id property: The artifact ID.
     * 
     * @param id the id value to set.
     * @return the BuildArtifactInner object itself.
     */
    public BuildArtifactInner withId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Get the name property: The name of the artifact.
     * 
     * @return the name value.
     */
    public String name() {
        return this.name;
    }

    /**
     * Set the name property: The name of the artifact.
     * 
     * @param name the name value to set.
     * @return the BuildArtifactInner object itself.
     */
    public BuildArtifactInner withName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get the resource property: The actual resource.
     * 
     * @return the resource value.
     */
    public ArtifactResource resource() {
        return this.resource;
    }

    /**
     * Set the resource property: The actual resource.
     * 
     * @param resource the resource value to set.
     * @return the BuildArtifactInner object itself.
     */
    public BuildArtifactInner withResource(ArtifactResource resource) {
        this.resource = resource;
        return this;
    }

    /**
     * Get the source property: The artifact source, which will be the ID of the job that produced this artifact. If an
     * artifact is associated with multiple sources, this points to the first source.
     * 
     * @return the source value.
     */
    public String source() {
        return this.source;
    }

    /**
     * Set the source property: The artifact source, which will be the ID of the job that produced this artifact. If an
     * artifact is associated with multiple sources, this points to the first source.
     * 
     * @param source the source value to set.
     * @return the BuildArtifactInner object itself.
     */
    public BuildArtifactInner withSource(String source) {
        this.source = source;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (resource() != null) {
            resource().validate();
        }
    }
}
