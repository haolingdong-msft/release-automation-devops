// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.dev.fluent.models;

import com.azure.core.annotation.Fluent;
import com.azure.dev.models.IdentityRef;
import com.azure.dev.models.TeamProjectReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;

/**
 * Represents a folder that contains build definitions.
 */
@Fluent
public final class FolderInner {
    /*
     * The process or person who created the folder.
     */
    @JsonProperty(value = "createdBy")
    private IdentityRef createdBy;

    /*
     * The date the folder was created.
     */
    @JsonProperty(value = "createdOn")
    private OffsetDateTime createdOn;

    /*
     * The description.
     */
    @JsonProperty(value = "description")
    private String description;

    /*
     * The process or person that last changed the folder.
     */
    @JsonProperty(value = "lastChangedBy")
    private IdentityRef lastChangedBy;

    /*
     * The date the folder was last changed.
     */
    @JsonProperty(value = "lastChangedDate")
    private OffsetDateTime lastChangedDate;

    /*
     * The full path.
     */
    @JsonProperty(value = "path")
    private String path;

    /*
     * The project.
     */
    @JsonProperty(value = "project")
    private TeamProjectReference project;

    /**
     * Creates an instance of FolderInner class.
     */
    public FolderInner() {
    }

    /**
     * Get the createdBy property: The process or person who created the folder.
     * 
     * @return the createdBy value.
     */
    public IdentityRef createdBy() {
        return this.createdBy;
    }

    /**
     * Set the createdBy property: The process or person who created the folder.
     * 
     * @param createdBy the createdBy value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withCreatedBy(IdentityRef createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Get the createdOn property: The date the folder was created.
     * 
     * @return the createdOn value.
     */
    public OffsetDateTime createdOn() {
        return this.createdOn;
    }

    /**
     * Set the createdOn property: The date the folder was created.
     * 
     * @param createdOn the createdOn value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }

    /**
     * Get the description property: The description.
     * 
     * @return the description value.
     */
    public String description() {
        return this.description;
    }

    /**
     * Set the description property: The description.
     * 
     * @param description the description value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get the lastChangedBy property: The process or person that last changed the folder.
     * 
     * @return the lastChangedBy value.
     */
    public IdentityRef lastChangedBy() {
        return this.lastChangedBy;
    }

    /**
     * Set the lastChangedBy property: The process or person that last changed the folder.
     * 
     * @param lastChangedBy the lastChangedBy value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withLastChangedBy(IdentityRef lastChangedBy) {
        this.lastChangedBy = lastChangedBy;
        return this;
    }

    /**
     * Get the lastChangedDate property: The date the folder was last changed.
     * 
     * @return the lastChangedDate value.
     */
    public OffsetDateTime lastChangedDate() {
        return this.lastChangedDate;
    }

    /**
     * Set the lastChangedDate property: The date the folder was last changed.
     * 
     * @param lastChangedDate the lastChangedDate value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withLastChangedDate(OffsetDateTime lastChangedDate) {
        this.lastChangedDate = lastChangedDate;
        return this;
    }

    /**
     * Get the path property: The full path.
     * 
     * @return the path value.
     */
    public String path() {
        return this.path;
    }

    /**
     * Set the path property: The full path.
     * 
     * @param path the path value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Get the project property: The project.
     * 
     * @return the project value.
     */
    public TeamProjectReference project() {
        return this.project;
    }

    /**
     * Set the project property: The project.
     * 
     * @param project the project value to set.
     * @return the FolderInner object itself.
     */
    public FolderInner withProject(TeamProjectReference project) {
        this.project = project;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
        if (createdBy() != null) {
            createdBy().validate();
        }
        if (lastChangedBy() != null) {
            lastChangedBy().validate();
        }
        if (project() != null) {
            project().validate();
        }
    }
}
